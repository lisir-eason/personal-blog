{"version":3,"sources":["api/api.js","page/register/LoginForm.js","api/index.js","page/register/RegisterForm.js","page/register/RegisterPage.js","component/Header.js","page/home/HomePage.js","page/profile/ProfilePage.js","page/square/SquarePage.js","page/notFound/NotFoundPage.js","page/setting/SettingPage.js","component/Tags.js","page/edit/EditPage.js","App.js","reportWebVitals.js","store/reducer.js","store/index.js","index.js"],"names":["api","axios","create","baseURL","baseUrl","timeout","interceptors","request","use","config","error","console","log","Promise","reject","response","status","data","errno","resolve","message","pathname","window","location","href","encodeURIComponent","withRouter","setIsLogin","history","useState","remember","setRemember","register","useSelector","state","Form","useForm","form","dispatch","useDispatch","useEffect","setFieldsValue","name","className","validateTrigger","initialValues","onFinish","values","userName","password","params","post","login","then","res","type","payload","parsed","url","parse","query","push","catch","err","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","noStyle","checked","onChange","e","target","onClick","preventDefault","htmlType","RegisterForm","rePassword","success","validator","_","value","isUserExit","Error","RegisterPage","isLogin","active","userInfo","size","src","picture","to","split","nickName","title","EditFilled","LogoutOutlined","HomePage","Fragment","match","SquarePage","subTitle","extra","SettingPage","fileList","setFileList","isModalVisible","setIsModalVisible","setPassword","newPassword","setNewPassword","confirm","Modal","uid","labelCol","span","wrapperCol","icon","ExclamationCircleOutlined","content","okText","cancelText","onOk","notification","onCancel","label","disabled","Group","options","optionType","buttonStyle","rotate","action","listType","newFileList","length","file","maxCount","offset","danger","visible","changePassword","Password","Tags","tags","setTags","readonly","inputVisible","setInputVisible","inputValue","setInputValue","editInputIndex","setEditInputIndex","editInputValue","setEditInputValue","editInput","useRef","saveInput","colors","current","focus","handleInputConfirm","newTags","indexOf","handleEditInputChange","handleEditInputConfirm","map","tag","index","ref","onBlur","onPressEnter","color","closable","onClose","removedTag","filterTags","filter","handleClose","onDoubleClick","PlusOutlined","EditPage","editorInfo","rawContent","isSave","BraftEditor","createEditorState","editorState","setEditorState","setIsSave","flag","extendControls","key","text","modalTitle","submitContent","a","htmlContent","toHTML","raw","toRAW","layout","style","width","onSave","controls","contentStyle","minHeight","top","footer","ReactHtmlParser","CheckCircleTwoTone","twoToneColor","ExclamationCircleTwoTone","App","exact","path","component","ProfilePage","NotFoundPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","store","createStore","composeWithDevTools","LwFirewords","init","ReactDOM","render","locale","zhCN","document","getElementById"],"mappings":"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","file":"static/js/main.8faca06b.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nlet baseUrl\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  // baseUrl = 'http://localhost:3001'\r\n  baseUrl = ''\r\n}\r\n\r\nconst api = axios.create({\r\n  baseURL: baseUrl,\r\n  timeout: 30000\r\n})\r\n\r\napi.interceptors.request.use(\r\n  config => {\r\n    //这里是request拦截器\r\n    return config\r\n  },\r\n  error => {\r\n    console.log(error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\napi.interceptors.response.use(\r\n  response => {\r\n    if (response.status === 200) {\r\n      if (response.data.errno === 0) {\r\n        return Promise.resolve(response)\r\n      } else if ( response.data.errno === 10007) {\r\n        const pathname = window.location.pathname\r\n        window.location.href= `/?url=${encodeURIComponent(pathname)}`\r\n      } else {\r\n        message.error(response.data.message)\r\n        return Promise.reject(response)\r\n      }\r\n    }\r\n    return Promise.reject(response)\r\n  },\r\n  error => {\r\n    console.log(error)\r\n    Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default api","import {useState, useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Form, Input, Button, Checkbox, message } from 'antd'\r\nimport url from 'fast-url-parser'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {login} from '../../api/index'\r\n\r\nconst LoginForm = ({\r\n  setIsLogin, history,\r\n}) => {\r\n  const [remember, setRemember] = useState(true)\r\n  const register = useSelector(state => state.register)\r\n  const [form] = Form.useForm()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(register)\r\n  }, [register])\r\n  const onForgetPasswordClick = (e) => {\r\n    e.preventDefault()\r\n    message.error('还没有实现该功能！')\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    const {userName, password,} = values\r\n    const params = {\r\n      userName,\r\n      password\r\n    }\r\n    login(params).then(res => {\r\n      if (res.data.errno === 0) {\r\n        dispatch({type: 'set_user_info', payload: res.data.data})\r\n        const parsed = url.parse(window.location.href, true)\r\n        if (parsed.query.url) {\r\n          history.push({pathname: parsed.query.url})\r\n          return\r\n        }\r\n        history.push({pathname: `/profile/${userName}`})\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      name='login-form'\r\n      className=\"login-form login-form-before\"\r\n      validateTrigger='onBlur'\r\n      initialValues={register}\r\n      form={form}\r\n      onFinish={onFinish}\r\n    >\r\n      <Form.Item\r\n        name='userName'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入用户名!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n          placeholder=\"用户名\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='password'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入密码!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"密  码\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Form.Item noStyle>\r\n          <Checkbox checked={remember} onChange={e => setRemember(e.target.checked)}>记住我</Checkbox>\r\n        </Form.Item>\r\n        <a className=\"login-form-forgot\" href=\"\" onClick={onForgetPasswordClick}>\r\n          忘记密码\r\n        </a>\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" className=\"login-form-button\" htmlType=\"submit\">\r\n          登录\r\n        </Button>\r\n        或者 <Button type=\"link\" className=\"register-btn\" onClick={() => setIsLogin(false)}>去注册!</Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default withRouter(LoginForm)","import api from './api'\r\n\r\nexport const register = (params) => {\r\n  return api.post('/users/register', params)\r\n}\r\n\r\nexport const isUserExit = (params) => {\r\n  return api.post('/users/isExist', params)\r\n}\r\n\r\nexport const login = (params) => {\r\n  return api.post('/users/login', params)\r\n}\r\n\r\nexport const getCurrentUser = () => {\r\n  return api.post('/users/currentUser')\r\n}\r\n\r\nexport const logout = () => {\r\n  return api.post('/users/logout')\r\n}\r\n\r\nexport const updateUserInfo = (params) => {\r\n  return api.post('/users/updateUserInfo', params)\r\n}\r\n\r\nexport const changePassword = (params) => {\r\n  return api.post('/users/changePassword', params)\r\n}","import {useState} from 'react'\r\nimport { useDispatch} from 'react-redux'\r\nimport { Form, Input, Button, Checkbox, message } from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\n\r\nimport {register, isUserExit} from '../../api/index'\r\n\r\nconst RegisterForm = ({\r\n  setIsLogin\r\n}) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const onFinish = (values) => {\r\n    const {userName, password, rePassword} = values\r\n    const params = {\r\n      userName,\r\n      password\r\n    }\r\n    if (password !== rePassword) {\r\n      message.error('两次输入的密码不一致！')\r\n      return\r\n    }\r\n    register(params).then(res => {\r\n      if (res.data.errno === 0) {\r\n        message.success('注册成功！')\r\n        setIsLogin(true)\r\n        dispatch({\r\n          type: 'set_register_info',\r\n          payload: params\r\n        })\r\n      }\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      name='register-form'\r\n      className=\"login-form login-form-right\"\r\n      validateTrigger='onBlur'\r\n      onFinish={onFinish}\r\n    >\r\n      <Form.Item\r\n        name='userName'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入用户名!',\r\n          },\r\n          {\r\n            validator: (_, value) => {\r\n              if (value) {\r\n                const params = {userName: value}\r\n                return isUserExit(params)\r\n                  .then(res => {\r\n                    if (res.data.data) {\r\n                      return Promise.reject(new Error('用户名已存在！'))\r\n                    }\r\n                    return Promise.resolve()\r\n                  })\r\n              }\r\n              return Promise.resolve()\r\n            }\r\n          },\r\n        ]}\r\n      >\r\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n          placeholder=\"用户名\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='password'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入密码!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"密  码\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='rePassword'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请确认密码!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"确认密码\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          注册\r\n        </Button>\r\n        已有账号? <Button type=\"link\" className=\"register-btn\" onClick={() => setIsLogin(true)}>去登录!</Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default RegisterForm","import { useState } from 'react'\r\nimport LoginForm from './LoginForm'\r\nimport RegisterForm from './RegisterForm'\r\n\r\nimport './RegisterPage.less'\r\n\r\n\r\nconst RegisterPage = () => {\r\n  const [isLogin, setIsLogin] = useState(true)\r\n\r\n  return (\r\n    <div className=\"bg-box\">\r\n      <div className={ isLogin ? 'login-form-box' : 'login-form-box turn-form-box-left'}>\r\n        <LoginForm setIsLogin={setIsLogin} />\r\n        <RegisterForm setIsLogin={setIsLogin} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterPage\r\n","import {useState, useEffect} from 'react'\r\nimport {Avatar, Button, Tooltip, Space, Typography, Divider} from 'antd'\r\nimport { EditFilled, LogoutOutlined} from '@ant-design/icons'\r\nimport {useSelector} from 'react-redux'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport {logout} from '../api/index'\r\nimport './Header.less'\r\n\r\n\r\nconst Header = ({\r\n  active, history\r\n}) => {\r\n  const onLogout = () => {\r\n    logout().then(res=> {\r\n      if (res.data.errno === 0) {\r\n        history.push('/')\r\n      }\r\n    })\r\n  }\r\n\r\n  const userInfo = useSelector(state => state.userInfo)\r\n\r\n  return (\r\n    <div className='header-container'>\r\n      <header className=\"header-box\">\r\n        <div className=\"header-inner\">\r\n          <Avatar size=\"large\" src={userInfo && userInfo.picture} />\r\n          <ul className=\"nav-box\">\r\n            <li className=\"nav-item\">\r\n              <Link to={'/home'} className={active === 'home' ? 'is-active' : ''}>首页</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={'/square'} className={active === 'square' ? 'is-active' : ''}>关注</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to ={`/profile/${userInfo && userInfo.userName}`} className={active === 'profile' ? 'is-active' : ''}>个人主页</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to ={'/setting'} className={active === 'setting' ? 'is-active' : ''}>设置</Link>\r\n            </li>\r\n          </ul>\r\n          <Space split={<Divider type=\"vertical\" />} className='menu-box'>\r\n            <span className='welcome-span'>欢迎您！{userInfo && userInfo.nickName}</span>\r\n            {active === 'edit' ? <Button type=\"primary\">发布</Button>: null}\r\n            <Tooltip title=\"去创作！\">\r\n              <EditFilled className={active === 'edit' ? 'active-icon' : ''} onClick={() => {\r\n                history.push('/edit')\r\n              }}/>\r\n            </Tooltip>\r\n            <Tooltip title=\"登出\">\r\n              <LogoutOutlined onClick={onLogout} />\r\n            </Tooltip>\r\n          </Space>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Header)","import React from 'react'\r\nimport { DatePicker } from 'antd'\r\nimport './HomePage.less'\r\n\r\nimport Header from '../../component/Header'\r\n\r\n\r\nconst HomePage = () => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header active=\"home\" />\r\n      <div className='content-container'>\r\n        homepage\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default HomePage","import {withRouter} from 'react-router-dom'\r\nimport {Timeline} from 'antd'\r\n\r\nimport Header from '../../component/Header'\r\nimport './ProfilePage.less'\r\n\r\n\r\nconst ProfilePage = ({\r\n  match\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Header active=\"profile\" />\r\n      <div className=\"content-container\">\r\n        <div className='timeline-container'>\r\n          <Timeline>\r\n            <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Solve initial network problems 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Technical testing 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Network problems being solved 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Solve initial network problems 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Technical testing 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Network problems being solved 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Solve initial network problems 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Technical testing 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Network problems being solved 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Solve initial network problems 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Technical testing 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Network problems being solved 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Solve initial network problems 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Technical testing 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Network problems being solved 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Solve initial network problems 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Technical testing 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Network problems being solved 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Solve initial network problems 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Technical testing 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Network problems being solved 2015-09-01</Timeline.Item>\r\n          </Timeline>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(ProfilePage)","import Header from '../../component/Header'\r\n\r\nconst SquarePage = () => {\r\n  return (\r\n    <div>\r\n      <Header active=\"square\" />\r\n      <div className=\"content-container\">\r\n        SquarePage\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SquarePage","import { Result, Button } from 'antd'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport Header from '../../component/Header'\r\n\r\nconst NotFoundPage = ({\r\n  history\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className='content-container'>\r\n        <Result\r\n          status=\"404\"\r\n          title=\"404\"\r\n          subTitle=\"抱歉，你访问的页面不存在。\"\r\n          extra={<Button type=\"primary\"\r\n            onClick={() => {\r\n              history.push('/home')\r\n            }}>回到主页</Button>}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(NotFoundPage)","import {useState, useEffect} from 'react'\r\nimport { Form, Input, Button, Checkbox, Radio, Upload, Modal, Space, notification, message } from 'antd'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport ImgCrop from 'antd-img-crop'\r\nimport Header from '../../component/Header'\r\nimport './settingPage.less'\r\nimport {updateUserInfo, changePassword} from '../../api/index'\r\n\r\nconst SettingPage = () => {\r\n  const layout = {labelCol: { span: 4,},wrapperCol: {span: 8},}\r\n  const psLayout = {labelCol: { offset: 3, span: 4,},wrapperCol: {span: 12},}\r\n  const tailLayout = {wrapperCol: {offset: 4,span: 16,}}\r\n  const options = [\r\n    { label: '男', value: 1 },\r\n    { label: '女', value: 2 },\r\n    { label: '保密', value: 3,},\r\n  ]\r\n  const userInfo = useSelector(state => state.userInfo)\r\n  const [fileList, setFileList] = useState([])\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n  const [password, setPassword] = useState()\r\n  const [newPassword, setNewPassword] = useState()\r\n  const dispatch = useDispatch()\r\n  const [form] = Form.useForm()\r\n  const { confirm } = Modal\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      form.setFieldsValue(userInfo)\r\n      setFileList([{uid: '-1', status: 'done', url: userInfo.picture,}])\r\n    }\r\n  }, [userInfo])\r\n\r\n  const onChange = ({ fileList: newFileList }) => {\r\n    if (newFileList.length && newFileList[0].status === 'done') {\r\n      const file = newFileList[0]\r\n      form.setFieldsValue({picture: file.response.data.url})\r\n      setFileList([{...file, url: file.response.data.url}])\r\n      return\r\n    }\r\n    if (!newFileList.length) {\r\n      form.setFieldsValue({picture: userInfo.picture})\r\n    }\r\n    setFileList(newFileList)\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    confirm({\r\n      title: '警告',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: '您确定修改个人信息吗？',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk() {\r\n        updateUserInfo(values).then(res => {\r\n          dispatch({type: 'set_user_info', payload: res.data.data})\r\n          notification.success({\r\n            message: '信息修改成功！'\r\n          })\r\n        })\r\n      },\r\n      onCancel() {},\r\n    })\r\n  }\r\n\r\n  const handleOk = () => {\r\n    if (!password) {\r\n      message.error('原密码不能为空！')\r\n      return\r\n    }\r\n    if (!newPassword) {\r\n      message.error('新密码不能为空！')\r\n      return\r\n    }\r\n    if (newPassword === password) {\r\n      message.error('新密码不能和旧密码相同！')\r\n      return\r\n    }\r\n    const params = {\r\n      password,\r\n      newPassword\r\n    }\r\n    changePassword(params).then(res => {\r\n      setIsModalVisible(false)\r\n      notification.success({\r\n        message: '密码修改成功！'\r\n      })\r\n    })\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header active='setting' />\r\n      <div className='content-container'>\r\n        <Form {...layout} form={form} onFinish={onFinish}>\r\n          <Form.Item\r\n            label=\"用户名\"\r\n            name='userName'\r\n          >\r\n            <Input disabled />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"昵称\"\r\n            name='nickName'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '请输入昵称!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label='性别'\r\n            name='gender'\r\n          >\r\n            <Radio.Group\r\n              options={options}\r\n              optionType=\"button\"\r\n              buttonStyle=\"solid\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"城市\"\r\n            name=\"city\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '请输入城市!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder='请输入城市!' />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"头像\"\r\n            name=\"picture\"\r\n          >\r\n            <ImgCrop rotate>\r\n              <Upload\r\n                action=\"/utils/upload\"\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                onChange={onChange}\r\n                maxCount={1}\r\n              >\r\n                {fileList.length < 5 && '+ Upload'}\r\n              </Upload>\r\n            </ImgCrop>\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n            <Button className='change-password-btn' danger onClick={() => {\r\n              setIsModalVisible(true)\r\n            }}>\r\n              修改密码\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <Modal title=\"修改密码\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n          <Form\r\n            {...psLayout}\r\n            name=\"basic\"\r\n          >\r\n            <Form.Item\r\n              label=\"原密码\"\r\n            >\r\n              <Input.Password value={password} onChange={e => {\r\n                setPassword(e.target.value)\r\n              }}/>\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"新密码\"\r\n            >\r\n              <Input.Password value={newPassword} onChange={e => {\r\n                setNewPassword(e.target.value)\r\n              }}/>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SettingPage","import {useState, useRef, Fragment, useEffect} from 'react'\r\nimport { Input, Tag, } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport './Tags.less'\r\n\r\nconst Tags = ({\r\n  tags, setTags, readonly\r\n}) => {\r\n  const [inputVisible, setInputVisible] = useState(false)\r\n  const [inputValue, setInputValue] = useState('')\r\n  const [editInputIndex, setEditInputIndex] = useState(-1)\r\n  const [editInputValue, setEditInputValue] = useState()\r\n  const editInput = useRef()\r\n  const saveInput = useRef()\r\n  const colors = ['magenta', 'geekblue', 'red', 'volcano', 'orange', 'purple' , 'blue', 'green', 'gold', 'orange',]\r\n\r\n  useEffect(() => {\r\n    if (saveInput.current) {\r\n      saveInput.current.focus()\r\n    }\r\n  }, [inputVisible])\r\n\r\n  useEffect(() => {\r\n    if (editInput.current) {\r\n      editInput.current.focus()\r\n    }\r\n  }, [editInputIndex])\r\n\r\n  const handleClose = removedTag => {\r\n    const filterTags = tags.filter(tag => tag !== removedTag)\r\n    setTags(filterTags)\r\n  }\r\n\r\n  const showInput = () => {\r\n    setInputVisible(true)\r\n  }\r\n\r\n  const handleInputChange = e => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleInputConfirm = () => {\r\n    let newTags\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      newTags = [...tags, inputValue]\r\n    }\r\n    setTags(newTags)\r\n    setInputVisible(false)\r\n    setInputValue('')\r\n  }\r\n\r\n  const handleEditInputChange = e => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleEditInputConfirm = () => {\r\n    const newTags = [...tags]\r\n    newTags[editInputIndex] = editInputValue\r\n    setTags(newTags)\r\n    setEditInputIndex(-1)\r\n    setInputValue('')\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {\r\n        tags && tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={editInput}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={handleEditInputChange}\r\n                onBlur={handleEditInputConfirm}\r\n                onPressEnter={handleEditInputConfirm}\r\n              />\r\n            )\r\n          }\r\n          return (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              color={colors[index]}\r\n              closable={!readonly}\r\n              onClose={() => handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (readonly) {\r\n                    return\r\n                  }\r\n                  setEditInputIndex(index)\r\n                  setEditInputValue(tag)\r\n                  e.preventDefault()\r\n                }}\r\n              >\r\n                {tag}\r\n              </span>\r\n            </Tag>\r\n          )\r\n        })\r\n      }\r\n      {\r\n        inputVisible &&\r\n          <Input\r\n            ref={saveInput}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            onBlur={handleInputConfirm}\r\n            onPressEnter={handleInputConfirm}\r\n          />\r\n      }\r\n      {!inputVisible && !readonly &&\r\n        <Tag className=\"site-tag-plus\" onClick={showInput}>\r\n          <PlusOutlined /> 新标签\r\n        </Tag>\r\n      }\r\n    </ Fragment>\r\n  )\r\n}\r\n\r\nexport default Tags","import {useState, useEffect,} from 'react'\r\nimport Header from '../../component/Header'\r\nimport BraftEditor from 'braft-editor'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Modal,Form, Input,} from 'antd'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport Tags from '../../component/Tags'\r\nimport { CheckCircleTwoTone, ExclamationCircleTwoTone } from '@ant-design/icons'\r\nimport 'braft-editor/dist/index.css'\r\nimport 'braft-editor/dist/output.css'\r\nimport './EditPage.less'\r\n\r\nconst EditPage = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n  const editorInfo = useSelector(state => state.editorInfo)\r\n  const {title, tags, rawContent, isSave} = editorInfo\r\n  const [editorState, setEditorState] = useState(BraftEditor.createEditorState(rawContent))\r\n  const dispatch = useDispatch()\r\n  const controls = [\r\n    'undo', 'redo', 'separator',\r\n    'headings','text-color', 'bold', 'italic', 'underline', 'strike-through', 'separator',\r\n    'separator',\r\n    'list-ul', 'list-ol', 'blockquote', 'code', 'separator',\r\n    'link', 'hr', 'emoji', 'separator',\r\n    'media', 'separator',\r\n  ]\r\n  const preview = () => {\r\n    setIsModalVisible(true)\r\n  }\r\n  const setTags = (tag) => {\r\n    dispatch({type: 'set_editor_info', payload: {tags: tag}})\r\n  }\r\n  const setIsSave = (flag) => {\r\n    dispatch({type: 'set_editor_info', payload: {isSave: flag}})\r\n  }\r\n  const extendControls = [\r\n    {\r\n      key: 'custom-button',\r\n      type: 'button',\r\n      text: '预览',\r\n      onClick: preview\r\n    }\r\n  ]\r\n  const modalTitle =\r\n    <div>\r\n      <span className='modal-title'>{title ? title : '请输入标题'}</span>\r\n      <Tags tags={tags} readonly/>\r\n    </div>\r\n\r\n  useEffect(() => {\r\n    // const htmlContent = await fetchEditorContent()\r\n    // setEditorState(BraftEditor.createEditorState(htmlContent))\r\n  }, [])\r\n\r\n  const handleEditorChange = (state) => {\r\n    setIsSave(false)\r\n    setEditorState(state)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false)\r\n  }\r\n\r\n  const submitContent = async () => {\r\n    const htmlContent = editorState.toHTML()\r\n    const raw = editorState.toRAW()\r\n    setIsSave(true)\r\n    dispatch({type: 'set_editor_info', payload: {htmlContent, rawContent: raw}})\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header active='edit' />\r\n      <div className='content-container'>\r\n        <div className=\"my-component\">\r\n          <Form layout='inline'>\r\n            <Form.Item label=\"文章标题\" >\r\n              <Input placeholder=\"请输入标题\" style={{width: '200px'}}\r\n                value={editorInfo.title}\r\n                onChange={e => {\r\n                  dispatch({type: 'set_editor_info', payload: {title: e.target.value}})\r\n                }}/>\r\n            </Form.Item>\r\n            <Form.Item label=\"文章标签\" >\r\n              <Tags tags={tags} setTags={setTags}/>\r\n            </Form.Item>\r\n          </Form>\r\n          <BraftEditor\r\n            value={editorState}\r\n            onChange={handleEditorChange}\r\n            onSave={submitContent}\r\n            controls={controls}\r\n            extendControls={extendControls}\r\n            contentStyle={{minHeight: 'calc(100vh - 170px)'}}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        title={modalTitle}\r\n        style={{ top: 52 }}\r\n        onCancel={handleCancel}\r\n        visible={isModalVisible}\r\n        footer ={null}\r\n        width={1000}\r\n      >\r\n        <div className=\"braft-output-content\">{editorState && ReactHtmlParser(editorState.toHTML())}</div>\r\n      </Modal>\r\n      {\r\n        isSave ?\r\n          <div className='editor-status-box'><CheckCircleTwoTone twoToneColor=\"#52c41a\" />已保存</div>:\r\n          <div className='editor-status-box'><ExclamationCircleTwoTone twoToneColor=\"#F5222D\"/>未保存</div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditPage\r\n\r\n","import React from 'react'\nimport {BrowserRouter, Route, Switch, withRouter} from 'react-router-dom'\nimport {getCurrentUser} from './api/index'\nimport {useDispatch} from 'react-redux'\n\nimport RegisterPage from './page/register/RegisterPage'\nimport HomePage from './page/home/HomePage'\nimport ProfilePage from './page/profile/ProfilePage'\nimport SquarePage from './page/square/SquarePage'\nimport NotFoundPage from './page/notFound/NotFoundPage'\nimport SettingPage from './page/setting/SettingPage'\nimport EditPage from './page/edit/EditPage'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  if (window.location.pathname !== '/') {\n    getCurrentUser().then(res=> {\n      dispatch({type: 'set_user_info', payload: res.data.data})\n    })\n  }\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/' component={RegisterPage}></Route>\n        <Route exact path='/profile/:userName' component={ProfilePage}></Route>\n        <Route exact path='/home' component={HomePage}></Route>\n        <Route exact path='/square' component={SquarePage}></Route>\n        <Route exact path='/setting' component={SettingPage}></Route>\n        <Route exact path='/edit' component={EditPage}></Route>\n        <Route exact path='*' component={NotFoundPage}></Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","const defaultState = {\r\n  state: 'fine',\r\n  register: {\r\n    userName: '',\r\n    password: ''\r\n  },\r\n  userInfo: null,\r\n  editorInfo: {\r\n    title: '',\r\n    tags: [],\r\n    htmlContent: null,\r\n    rawContent: null,\r\n    isSave: false,\r\n  }\r\n}\r\n\r\nexport default (state = defaultState, action)=>{\r\n  switch (action.type) {\r\n  case 'set_register_info':\r\n    state.register = {...action.payload}\r\n    break\r\n  case 'set_user_info':\r\n    state.userInfo = {...action.payload}\r\n    break\r\n  case 'set_editor_info':\r\n    state.editorInfo = {...state.editorInfo, ...action.payload}\r\n    break\r\n  default:\r\n    break\r\n  }\r\n  return state\r\n}","import { createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport reducer from './reducer'\r\n\r\nconst store = createStore(reducer, composeWithDevTools())\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport LwFirewords from 'lw_firewords'\nimport 'antd/dist/antd.css'\nimport 'animate.css'\nimport './rewriteAntd.less'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport store from './store/index'\nimport {Provider} from 'react-redux'\nimport { ConfigProvider } from 'antd'\nimport zhCN from 'antd/lib/locale/zh_CN'\n\nconst lwf = new LwFirewords()\nlwf.init()\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConfigProvider locale={zhCN}>\n      <App />\n    </ConfigProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}